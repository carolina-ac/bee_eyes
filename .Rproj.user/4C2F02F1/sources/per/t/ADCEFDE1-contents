########################################
#
#   LOADING IMPORTANT LIBRARIES
#
########################################

library(tidyverse)
library(cluster)
library(dendextend)
library(factoextra) 
library(gridExtra)

########################################
#
#         HIERARCHICAL CLUSTERING 
#
########################################

# Loadind data
eyes <- read.table("eyes_df.txt", header = TRUE, sep = "\t")


# Transforming species names into row names
row.names(eyes) <- eyes[,1]
eyes <- eyes[,-1]

# Standardizing variables
eyes.standardized <- scale(eyes[, 2:7])


# Calculating distances in the matrix using Euclidean distance
distance <- dist(eyes.standardized, method = "euclidean")

# Calculating the Cluster: available methods "average", "single", "complete", and "ward.D"
cluster.hierarchical <- hclust(distance, method = "average" )

# Dendrogram
plot(cluster.hierarchical, cex = 0.6, hang = -1)

# Creating the plot and highlighting groups
rect.hclust(cluster.hierarchical, k = 3)

# CHECKING ELBOW AND SILHOUETTE
fviz_nbclust(eyes.standardized, FUN = hcut, method = "wss")
fviz_nbclust(eyes.standardized, FUN = hcut, method = "silhouette")

# Creating 4 groups of clusters
group_eyes3 <- cutree(cluster.hierarchical, k = 3)
table(group_eyes3)

# Transforming the cluster output into a data frame
eyes_groups <- data.frame(group_eyes3)

# Merging with the original database
final_df_eyes <- cbind(eyes, eyes_groups)

library("writexl")
write_xlsx(final_df_eyes,"F:/git_aberto/bee_eyes/clustereyes_average.xlsx")

# PERFORMING DESCRIPTIVE ANALYSIS
# MEANS of variables by group
mediagroup <- final_df_eyes %>% 
  group_by(group_eyes3) %>% 
  summarise(n = n(),
            ff = mean(ff), 
            df = mean(df), 
            vf = mean(vf),
            co = mean(co), 
            nf = mean(nf), 
            nfa = mean(nfa),
            ea = mean(ea), 
            di = mean(di))
mediagroup



########################################
#
#     NON-HIERARCHICAL CLUSTERING 
#
########################################

# Running the model
eyes.k2 <- kmeans(eyes.standardized, centers = 2)

# Viewing the clusters
fviz_cluster(eyes.k2, data = eyes.standardized, main = "Cluster K2")

# Creating clusters
eyes.k3 <- kmeans(eyes.standardized, centers = 3)
eyes.k4 <- kmeans(eyes.standardized, centers = 4)
eyes.k5 <- kmeans(eyes.standardized, centers = 5)

# Viewing the clusters
fviz_cluster(eyes.k3, data = eyes.standardized, main = "Cluster K3")
fviz_cluster(eyes.k4, data = eyes.standardized, main = "Cluster K4")
fviz_cluster(eyes.k5, data = eyes.standardized, main = "Cluster K5")

# Creating plots
G1 <- fviz_cluster(eyes.k2, geom = "point", data = eyes.standardized) + ggtitle("k = 2")
G2 <- fviz_cluster(eyes.k3, geom = "point",  data = eyes.standardized) + ggtitle("k = 3")
G3 <- fviz_cluster(eyes.k4, geom = "point",  data = eyes.standardized) + ggtitle("k = 4")
G4 <- fviz_cluster(eyes.k5, geom = "point",  data = eyes.standardized) + ggtitle("k = 5")

plot(G1, cex = 0.6, hang = -1)
# Printing plots on the same screen
grid.arrange(G1, G2, G3, G4, nrow = 2)

# CHECKING ELBOW AND SILHOUETTE
fviz_nbclust(eyes.standardized, kmeans, method = "wss")
fviz_nbclust(eyes.standardized, kmeans, method = "silhouette")

